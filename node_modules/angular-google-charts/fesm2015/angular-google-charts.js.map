{"version":3,"file":"angular-google-charts.js","sources":["ng://angular-google-charts/lib/models/injection-tokens.model.ts","ng://angular-google-charts/lib/script-loader/script-loader.service.ts","ng://angular-google-charts/lib/helpers/google-chart-packages.helper.ts","ng://angular-google-charts/lib/raw-chart/raw-chart.component.ts","ng://angular-google-charts/lib/google-chart/google-chart.component.ts","ng://angular-google-charts/lib/google-charts.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport const CHART_VERSION = new InjectionToken<string>('CHART_VERSION');\r\nexport const GOOGLE_API_KEY = new InjectionToken<string>('GOOGLE_API_KEY');\r\n","import { Injectable, Inject, LOCALE_ID, Optional } from '@angular/core';\r\nimport { Observable, Subject, of } from 'rxjs';\r\n\r\nimport { GOOGLE_API_KEY, CHART_VERSION } from '../models/injection-tokens.model';\r\n\r\n@Injectable()\r\nexport class ScriptLoaderService {\r\n  private readonly scriptSource = 'https://www.gstatic.com/charts/loader.js';\r\n\r\n  private onLoadSubject = new Subject<boolean>();\r\n\r\n  constructor(\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(GOOGLE_API_KEY) @Optional() private googleApiKey?: string,\r\n    @Inject(CHART_VERSION) @Optional() private chartVersion?: string\r\n  ) {\r\n    this.initialize();\r\n  }\r\n\r\n  public get onReady(): Observable<boolean> {\r\n    if (this.doneLoading) {\r\n      return of(true);\r\n    }\r\n\r\n    return this.onLoadSubject.asObservable();\r\n  }\r\n\r\n  public get doneLoading(): boolean {\r\n    if (typeof google === 'undefined' || typeof google.charts === 'undefined') {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private get isLoading(): boolean {\r\n    if (this.doneLoading) {\r\n      return false;\r\n    }\r\n\r\n    const pageScripts = Array.from(document.getElementsByTagName('script'));\r\n    const googleChartsScript = pageScripts.find(script => script.src === this.scriptSource);\r\n    return googleChartsScript !== undefined;\r\n  }\r\n\r\n  public loadChartPackages(packages: Array<string>): Observable<void> {\r\n    return new Observable(observer => {\r\n      const config = {\r\n        packages: packages,\r\n        language: this.localeId,\r\n        mapsApiKey: this.googleApiKey\r\n      };\r\n\r\n      google.charts.load(this.chartVersion, config);\r\n      google.charts.setOnLoadCallback(() => {\r\n        observer.next();\r\n        observer.complete();\r\n      });\r\n    });\r\n  }\r\n\r\n  private initialize() {\r\n    if (!this.doneLoading && !this.isLoading) {\r\n      const script = this.createScriptElement();\r\n\r\n      script.onload = () => {\r\n        this.onLoadSubject.next(true);\r\n        this.onLoadSubject.complete();\r\n      };\r\n\r\n      script.onerror = () => {\r\n        console.error('Failed to load the google chart script!');\r\n        this.onLoadSubject.error('Failed to load the google chart script!');\r\n        this.onLoadSubject.complete();\r\n      };\r\n    }\r\n  }\r\n\r\n  private createScriptElement(): HTMLScriptElement {\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.src = this.scriptSource;\r\n    script.async = true;\r\n    document.getElementsByTagName('head')[0].appendChild(script);\r\n    return script;\r\n  }\r\n}\r\n","export class GoogleChartPackagesHelper {\r\n  private static ChartTypesToPackages = {\r\n    AnnotationChart: 'annotationchart',\r\n    AreaChart: 'corechart',\r\n    Bar: 'bar',\r\n    BarChart: 'corechart',\r\n    BubbleChart: 'corechart',\r\n    Calendar: 'calendar',\r\n    CandlestickChart: 'corechart',\r\n    ColumnChart: 'corechart',\r\n    ComboChart: 'corechart',\r\n    PieChart: 'corechart',\r\n    Gantt: 'gantt',\r\n    Gauge: 'gauge',\r\n    GeoChart: 'geochart',\r\n    Histogram: 'corechart',\r\n    Line: 'line',\r\n    LineChart: 'corechart',\r\n    Map: 'map',\r\n    OrgChart: 'orgchart',\r\n    Sankey: 'sankey',\r\n    Scatter: 'scatter',\r\n    ScatterChart: 'corechart',\r\n    SteppedAreaChart: 'corechart',\r\n    Table: 'table',\r\n    Timeline: 'timeline',\r\n    TreeMap: 'treemap',\r\n    WordTree: 'wordtree'\r\n  };\r\n\r\n  public static getPackageForChartName(chartName: string): string {\r\n    return GoogleChartPackagesHelper.ChartTypesToPackages[chartName];\r\n  }\r\n}\r\n","/// <reference types=\"google.visualization\"/>\r\n\r\nimport {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  OnInit,\r\n  OnChanges,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { Observable, fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { ChartErrorEvent, ChartEvent } from '../models/events.model';\r\nimport { ScriptLoaderService } from '../script-loader/script-loader.service';\r\nimport { GoogleChartPackagesHelper } from '../helpers/google-chart-packages.helper';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'raw-chart',\r\n  template: '',\r\n  styles: [':host { width: fit-content; display: block; }'],\r\n  exportAs: 'raw-chart',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RawChartComponent implements OnInit, OnChanges, AfterViewInit {\r\n  @Input()\r\n  chartData: google.visualization.ChartSpecs;\r\n\r\n  @Input()\r\n  formatter:\r\n    | google.visualization.DefaultFormatter\r\n    | Array<{\r\n        formatter: google.visualization.DefaultFormatter;\r\n        colIndex: number;\r\n      }>;\r\n\r\n  @Input()\r\n  dynamicResize = false;\r\n\r\n  @Input()\r\n  firstRowIsData = false;\r\n\r\n  @Output()\r\n  error = new EventEmitter<ChartErrorEvent>();\r\n\r\n  @Output()\r\n  ready = new EventEmitter();\r\n\r\n  @Output()\r\n  select = new EventEmitter<ChartEvent>();\r\n\r\n  @Output()\r\n  mouseenter = new EventEmitter<ChartEvent>();\r\n\r\n  @Output()\r\n  mouseleave = new EventEmitter<ChartEvent>();\r\n\r\n  wrapper: google.visualization.ChartWrapper;\r\n\r\n  private dataTable: google.visualization.DataTable;\r\n\r\n  constructor(protected element: ElementRef, protected loaderService: ScriptLoaderService) {}\r\n\r\n  ngOnInit() {\r\n    if (this.chartData == null) {\r\n      throw new Error('Can\\'t create a Google Chart without data!');\r\n    }\r\n\r\n    this.loaderService.onReady.subscribe(() => {\r\n      this.createChart();\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.addResizeListener();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.wrapper) {\r\n      this.updateChart();\r\n    }\r\n  }\r\n\r\n  public getChartElement(): HTMLElement {\r\n    return this.element.nativeElement.firstElementChild;\r\n  }\r\n\r\n  protected createChart() {\r\n    this.loadNeededPackages().subscribe(() => {\r\n      this.wrapper = new google.visualization.ChartWrapper();\r\n      this.updateChart();\r\n    });\r\n  }\r\n\r\n  protected loadNeededPackages(): Observable<void> {\r\n    return this.loaderService.loadChartPackages([GoogleChartPackagesHelper.getPackageForChartName(this.chartData.chartType)]);\r\n  }\r\n\r\n  protected updateChart() {\r\n    // This check here is important to allow passing of a created dataTable as well as just an array\r\n    if (!(this.chartData.dataTable instanceof google.visualization.DataTable)) {\r\n      this.dataTable = google.visualization.arrayToDataTable(<any[]>this.chartData.dataTable, this.firstRowIsData);\r\n    } else {\r\n      this.dataTable = this.chartData.dataTable;\r\n    }\r\n\r\n    this.wrapper.setDataTable(this.dataTable);\r\n    this.wrapper.setChartType(this.chartData.chartType);\r\n    this.wrapper.setOptions(this.chartData.options);\r\n    this.wrapper.setDataSourceUrl(this.chartData.dataSourceUrl);\r\n    this.wrapper.setQuery(this.chartData.query);\r\n    this.wrapper.setRefreshInterval(this.chartData.refreshInterval);\r\n    this.wrapper.setView(this.chartData.view);\r\n\r\n    this.removeChartEvents();\r\n    this.registerChartEvents();\r\n\r\n    if (this.formatter) {\r\n      this.formatData(this.dataTable);\r\n    }\r\n\r\n    this.wrapper.draw(this.element.nativeElement);\r\n  }\r\n\r\n  protected formatData(dataTable: google.visualization.DataTable) {\r\n    if (this.formatter instanceof Array) {\r\n      this.formatter.forEach(value => {\r\n        value.formatter.format(dataTable, value.colIndex);\r\n      });\r\n    } else {\r\n      for (let i = 0; i < dataTable.getNumberOfColumns(); i++) {\r\n        this.formatter.format(dataTable, i);\r\n      }\r\n    }\r\n  }\r\n\r\n  private addResizeListener() {\r\n    if (this.dynamicResize) {\r\n      fromEvent(window, 'resize')\r\n        .pipe(debounceTime(100))\r\n        .subscribe(() => {\r\n          this.ngOnChanges();\r\n        });\r\n    }\r\n  }\r\n\r\n  private removeChartEvents() {\r\n    google.visualization.events.removeAllListeners(this.wrapper);\r\n  }\r\n\r\n  private registerChartEvents() {\r\n    this.registerChartEvent(this.wrapper, 'ready', () => {\r\n      this.registerChartEvent(this.wrapper.getChart(), 'onmouseover', event => this.mouseenter.emit(event));\r\n      this.registerChartEvent(this.wrapper.getChart(), 'onmouseout', event => this.mouseleave.emit(event));\r\n\r\n      this.ready.emit('Chart Ready');\r\n    });\r\n\r\n    this.registerChartEvent(this.wrapper, 'error', error => this.error.emit(error));\r\n    this.registerChartEvent(this.wrapper, 'select', () => {\r\n      const selection = this.wrapper.getChart().getSelection();\r\n      this.select.emit(selection);\r\n    });\r\n  }\r\n\r\n  private registerChartEvent(object: any, eventName: string, callback: Function) {\r\n    google.visualization.events.addListener(object, eventName, callback);\r\n  }\r\n}\r\n","/// <reference types=\"google.visualization\"/>\r\n\r\nimport { Component, OnInit, ElementRef, Input, ChangeDetectionStrategy, OnChanges } from '@angular/core';\r\n\r\nimport { ScriptLoaderService } from '../script-loader/script-loader.service';\r\nimport { RawChartComponent } from '../raw-chart/raw-chart.component';\r\nimport { Role } from '../models/role.model';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'google-chart',\r\n  template: '',\r\n  styles: [':host { width: fit-content; display: block; }'],\r\n  exportAs: 'google-chart',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GoogleChartComponent extends RawChartComponent implements OnInit, OnChanges {\r\n  @Input()\r\n  data: Array<Array<string | number>>;\r\n\r\n  @Input()\r\n  columnNames: Array<string>;\r\n\r\n  @Input()\r\n  roles: Array<Role> = new Array();\r\n\r\n  @Input()\r\n  title: string;\r\n\r\n  @Input()\r\n  width: number = undefined;\r\n\r\n  @Input()\r\n  height: number = undefined;\r\n\r\n  @Input()\r\n  options: any = {};\r\n\r\n  @Input()\r\n  type: string;\r\n\r\n  constructor(element: ElementRef, loaderService: ScriptLoaderService) {\r\n    super(element, loaderService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.type == null) {\r\n      throw new Error('Can\\'t create a Google Chart without specifying a type!');\r\n    }\r\n    if (this.data == null) {\r\n      throw new Error('Can\\'t create a Google Chart without data!');\r\n    }\r\n\r\n    this.chartData = {\r\n      chartType: this.type\r\n    };\r\n\r\n    this.loaderService.onReady.subscribe(() => {\r\n      this.createChart();\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.wrapper) {\r\n      this.chartData = {\r\n        chartType: this.type,\r\n        dataTable: this.getDataTable(),\r\n        options: this.parseOptions()\r\n      };\r\n    }\r\n\r\n    super.ngOnChanges();\r\n  }\r\n\r\n  protected parseOptions(): any {\r\n    return {\r\n      title: this.title,\r\n      width: this.width,\r\n      height: this.height,\r\n      ...this.options\r\n    };\r\n  }\r\n\r\n  protected createChart() {\r\n    this.loadNeededPackages().subscribe(() => {\r\n      this.chartData = {\r\n        chartType: this.type,\r\n        dataTable: this.getDataTable(),\r\n        options: this.parseOptions()\r\n      };\r\n\r\n      this.wrapper = new google.visualization.ChartWrapper();\r\n      this.updateChart();\r\n    });\r\n  }\r\n\r\n  protected getDataTable(): Array<any> {\r\n    if (this.columnNames) {\r\n      const columns = this.parseRoles(this.columnNames);\r\n      this.firstRowIsData = false;\r\n      return [columns, ...this.data];\r\n    } else {\r\n      this.firstRowIsData = true;\r\n      return this.data;\r\n    }\r\n  }\r\n\r\n  private parseRoles(columnNames: any[]): any[] {\r\n    const columnNamesWithRoles = columnNames.slice();\r\n    if (this.roles) {\r\n      // Roles must be copied to avoid modifying the index everytime there's a change from ngOnChanges.\r\n      const copyRoles = this.roles.map(role => Object.assign({}, role));\r\n      copyRoles.forEach(role => {\r\n        const roleData: Role = {\r\n          type: role.type,\r\n          role: role.role\r\n        };\r\n        if (role.p) {\r\n          roleData.p = role.p;\r\n        }\r\n        if (role.index != null) {\r\n          columnNamesWithRoles.splice(role.index + 1, 0, roleData);\r\n\r\n          for (const otherRole of copyRoles) {\r\n            if (otherRole === role) {\r\n              continue;\r\n            }\r\n\r\n            if (otherRole.index > role.index) {\r\n              otherRole.index++;\r\n            }\r\n          }\r\n        } else {\r\n          columnNamesWithRoles.push(roleData);\r\n        }\r\n      });\r\n    }\r\n\r\n    return columnNamesWithRoles;\r\n  }\r\n}\r\n","import { NgModule, Provider, LOCALE_ID, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { ScriptLoaderService } from './script-loader/script-loader.service';\r\nimport { RawChartComponent } from './raw-chart/raw-chart.component';\r\nimport { GoogleChartComponent } from './google-chart/google-chart.component';\r\nimport { GOOGLE_API_KEY, CHART_VERSION } from './models/injection-tokens.model';\r\n\r\nexport const GOOGLE_CHARTS_PROVIDERS: Provider[] = [\r\n  {\r\n    provide: ScriptLoaderService,\r\n    useFactory: setupScriptLoaderService,\r\n    deps: [LOCALE_ID, GOOGLE_API_KEY, CHART_VERSION]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  providers: [ScriptLoaderService],\r\n  declarations: [GoogleChartComponent, RawChartComponent],\r\n  exports: [GoogleChartComponent, RawChartComponent]\r\n})\r\nexport class GoogleChartsModule {\r\n  public static forRoot(googleApiKey?: string, chartVersion?: string): ModuleWithProviders {\r\n    return {\r\n      ngModule: GoogleChartsModule,\r\n      providers: [\r\n        GOOGLE_CHARTS_PROVIDERS,\r\n        { provide: GOOGLE_API_KEY, useValue: googleApiKey ? googleApiKey : '' },\r\n        { provide: CHART_VERSION, useValue: chartVersion ? chartVersion : '46' }\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\nexport function setupScriptLoaderService(localeId: string, googleApiKey: string, chartVersion: string): ScriptLoaderService {\r\n  return new ScriptLoaderService(localeId, googleApiKey, chartVersion);\r\n}\r\n"],"names":[],"mappings":"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"}