{"version":3,"file":"angular-google-charts.js","sources":["ng:/angular-google-charts/lib/models/injection-tokens.model.ts","ng:/angular-google-charts/lib/script-loader/script-loader.service.ts","ng:/angular-google-charts/lib/helpers/google-chart-packages.helper.ts","ng:/angular-google-charts/lib/raw-chart/raw-chart.component.ts","ng:/angular-google-charts/lib/google-chart/google-chart.component.ts","ng:/angular-google-charts/lib/google-charts.module.ts"],"names":["tslib_1.__extends","tslib_1.__values"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport const CHART_VERSION = new InjectionToken<string>('CHART_VERSION');\r\nexport const GOOGLE_API_KEY = new InjectionToken<string>('GOOGLE_API_KEY');\r\n","import { Injectable, Inject, LOCALE_ID, Optional } from '@angular/core';\r\nimport { Observable, Subject, of } from 'rxjs';\r\n\r\nimport { GOOGLE_API_KEY, CHART_VERSION } from '../models/injection-tokens.model';\r\n\r\n@Injectable()\r\nexport class ScriptLoaderService {\r\n  private readonly scriptSource = 'https://www.gstatic.com/charts/loader.js';\r\n\r\n  private onLoadSubject = new Subject<boolean>();\r\n\r\n  constructor(\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(GOOGLE_API_KEY) @Optional() private googleApiKey?: string,\r\n    @Inject(CHART_VERSION) @Optional() private chartVersion?: string\r\n  ) {\r\n    this.initialize();\r\n  }\r\n\r\n  public get onReady(): Observable<boolean> {\r\n    if (this.doneLoading) {\r\n      return of(true);\r\n    }\r\n\r\n    return this.onLoadSubject.asObservable();\r\n  }\r\n\r\n  public get doneLoading(): boolean {\r\n    if (typeof google === 'undefined' || typeof google.charts === 'undefined') {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private get isLoading(): boolean {\r\n    if (this.doneLoading) {\r\n      return false;\r\n    }\r\n\r\n    const pageScripts = Array.from(document.getElementsByTagName('script'));\r\n    const googleChartsScript = pageScripts.find(script => script.src === this.scriptSource);\r\n    return googleChartsScript !== undefined;\r\n  }\r\n\r\n  public loadChartPackages(packages: Array<string>): Observable<void> {\r\n    return new Observable(observer => {\r\n      const config = {\r\n        packages: packages,\r\n        language: this.localeId,\r\n        mapsApiKey: this.googleApiKey\r\n      };\r\n\r\n      google.charts.load(this.chartVersion, config);\r\n      google.charts.setOnLoadCallback(() => {\r\n        observer.next();\r\n        observer.complete();\r\n      });\r\n    });\r\n  }\r\n\r\n  private initialize() {\r\n    if (!this.doneLoading && !this.isLoading) {\r\n      const script = this.createScriptElement();\r\n\r\n      script.onload = () => {\r\n        this.onLoadSubject.next(true);\r\n        this.onLoadSubject.complete();\r\n      };\r\n\r\n      script.onerror = () => {\r\n        console.error('Failed to load the google chart script!');\r\n        this.onLoadSubject.error('Failed to load the google chart script!');\r\n        this.onLoadSubject.complete();\r\n      };\r\n    }\r\n  }\r\n\r\n  private createScriptElement(): HTMLScriptElement {\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.src = this.scriptSource;\r\n    script.async = true;\r\n    document.getElementsByTagName('head')[0].appendChild(script);\r\n    return script;\r\n  }\r\n}\r\n","export class GoogleChartPackagesHelper {\r\n  private static ChartTypesToPackages = {\r\n    AnnotationChart: 'annotationchart',\r\n    AreaChart: 'corechart',\r\n    Bar: 'bar',\r\n    BarChart: 'corechart',\r\n    BubbleChart: 'corechart',\r\n    Calendar: 'calendar',\r\n    CandlestickChart: 'corechart',\r\n    ColumnChart: 'corechart',\r\n    ComboChart: 'corechart',\r\n    PieChart: 'corechart',\r\n    Gantt: 'gantt',\r\n    Gauge: 'gauge',\r\n    GeoChart: 'geochart',\r\n    Histogram: 'corechart',\r\n    Line: 'line',\r\n    LineChart: 'corechart',\r\n    Map: 'map',\r\n    OrgChart: 'orgchart',\r\n    Sankey: 'sankey',\r\n    Scatter: 'scatter',\r\n    ScatterChart: 'corechart',\r\n    SteppedAreaChart: 'corechart',\r\n    Table: 'table',\r\n    Timeline: 'timeline',\r\n    TreeMap: 'treemap',\r\n    WordTree: 'wordtree'\r\n  };\r\n\r\n  public static getPackageForChartName(chartName: string): string {\r\n    return GoogleChartPackagesHelper.ChartTypesToPackages[chartName];\r\n  }\r\n}\r\n","/// <reference types=\"google.visualization\"/>\r\n\r\nimport {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  OnInit,\r\n  OnChanges,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { Observable, fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { ChartErrorEvent, ChartEvent } from '../models/events.model';\r\nimport { ScriptLoaderService } from '../script-loader/script-loader.service';\r\nimport { GoogleChartPackagesHelper } from '../helpers/google-chart-packages.helper';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'raw-chart',\r\n  template: '',\r\n  styles: [':host { width: fit-content; display: block; }'],\r\n  exportAs: 'raw-chart',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RawChartComponent implements OnInit, OnChanges, AfterViewInit {\r\n  @Input()\r\n  chartData: google.visualization.ChartSpecs;\r\n\r\n  @Input()\r\n  formatter:\r\n    | google.visualization.DefaultFormatter\r\n    | Array<{\r\n        formatter: google.visualization.DefaultFormatter;\r\n        colIndex: number;\r\n      }>;\r\n\r\n  @Input()\r\n  dynamicResize = false;\r\n\r\n  @Input()\r\n  firstRowIsData = false;\r\n\r\n  @Output()\r\n  error = new EventEmitter<ChartErrorEvent>();\r\n\r\n  @Output()\r\n  ready = new EventEmitter();\r\n\r\n  @Output()\r\n  select = new EventEmitter<ChartEvent>();\r\n\r\n  @Output()\r\n  mouseenter = new EventEmitter<ChartEvent>();\r\n\r\n  @Output()\r\n  mouseleave = new EventEmitter<ChartEvent>();\r\n\r\n  wrapper: google.visualization.ChartWrapper;\r\n\r\n  private dataTable: google.visualization.DataTable;\r\n\r\n  constructor(protected element: ElementRef, protected loaderService: ScriptLoaderService) {}\r\n\r\n  ngOnInit() {\r\n    if (this.chartData == null) {\r\n      throw new Error('Can\\'t create a Google Chart without data!');\r\n    }\r\n\r\n    this.loaderService.onReady.subscribe(() => {\r\n      this.createChart();\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.addResizeListener();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.wrapper) {\r\n      this.updateChart();\r\n    }\r\n  }\r\n\r\n  public getChartElement(): HTMLElement {\r\n    return this.element.nativeElement.firstElementChild;\r\n  }\r\n\r\n  protected createChart() {\r\n    this.loadNeededPackages().subscribe(() => {\r\n      this.wrapper = new google.visualization.ChartWrapper();\r\n      this.updateChart();\r\n    });\r\n  }\r\n\r\n  protected loadNeededPackages(): Observable<void> {\r\n    return this.loaderService.loadChartPackages([GoogleChartPackagesHelper.getPackageForChartName(this.chartData.chartType)]);\r\n  }\r\n\r\n  protected updateChart() {\r\n    // This check here is important to allow passing of a created dataTable as well as just an array\r\n    if (!(this.chartData.dataTable instanceof google.visualization.DataTable)) {\r\n      this.dataTable = google.visualization.arrayToDataTable(<any[]>this.chartData.dataTable, this.firstRowIsData);\r\n    } else {\r\n      this.dataTable = this.chartData.dataTable;\r\n    }\r\n\r\n    this.wrapper.setDataTable(this.dataTable);\r\n    this.wrapper.setChartType(this.chartData.chartType);\r\n    this.wrapper.setOptions(this.chartData.options);\r\n    this.wrapper.setDataSourceUrl(this.chartData.dataSourceUrl);\r\n    this.wrapper.setQuery(this.chartData.query);\r\n    this.wrapper.setRefreshInterval(this.chartData.refreshInterval);\r\n    this.wrapper.setView(this.chartData.view);\r\n\r\n    this.removeChartEvents();\r\n    this.registerChartEvents();\r\n\r\n    if (this.formatter) {\r\n      this.formatData(this.dataTable);\r\n    }\r\n\r\n    this.wrapper.draw(this.element.nativeElement);\r\n  }\r\n\r\n  protected formatData(dataTable: google.visualization.DataTable) {\r\n    if (this.formatter instanceof Array) {\r\n      this.formatter.forEach(value => {\r\n        value.formatter.format(dataTable, value.colIndex);\r\n      });\r\n    } else {\r\n      for (let i = 0; i < dataTable.getNumberOfColumns(); i++) {\r\n        this.formatter.format(dataTable, i);\r\n      }\r\n    }\r\n  }\r\n\r\n  private addResizeListener() {\r\n    if (this.dynamicResize) {\r\n      fromEvent(window, 'resize')\r\n        .pipe(debounceTime(100))\r\n        .subscribe(() => {\r\n          this.ngOnChanges();\r\n        });\r\n    }\r\n  }\r\n\r\n  private removeChartEvents() {\r\n    google.visualization.events.removeAllListeners(this.wrapper);\r\n  }\r\n\r\n  private registerChartEvents() {\r\n    this.registerChartEvent(this.wrapper, 'ready', () => {\r\n      this.registerChartEvent(this.wrapper.getChart(), 'onmouseover', event => this.mouseenter.emit(event));\r\n      this.registerChartEvent(this.wrapper.getChart(), 'onmouseout', event => this.mouseleave.emit(event));\r\n\r\n      this.ready.emit('Chart Ready');\r\n    });\r\n\r\n    this.registerChartEvent(this.wrapper, 'error', error => this.error.emit(error));\r\n    this.registerChartEvent(this.wrapper, 'select', () => {\r\n      const selection = this.wrapper.getChart().getSelection();\r\n      this.select.emit(selection);\r\n    });\r\n  }\r\n\r\n  private registerChartEvent(object: any, eventName: string, callback: Function) {\r\n    google.visualization.events.addListener(object, eventName, callback);\r\n  }\r\n}\r\n","/// <reference types=\"google.visualization\"/>\r\n\r\nimport { Component, OnInit, ElementRef, Input, ChangeDetectionStrategy, OnChanges } from '@angular/core';\r\n\r\nimport { ScriptLoaderService } from '../script-loader/script-loader.service';\r\nimport { RawChartComponent } from '../raw-chart/raw-chart.component';\r\nimport { Role } from '../models/role.model';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'google-chart',\r\n  template: '',\r\n  styles: [':host { width: fit-content; display: block; }'],\r\n  exportAs: 'google-chart',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GoogleChartComponent extends RawChartComponent implements OnInit, OnChanges {\r\n  @Input()\r\n  data: Array<Array<string | number>>;\r\n\r\n  @Input()\r\n  columnNames: Array<string>;\r\n\r\n  @Input()\r\n  roles: Array<Role> = new Array();\r\n\r\n  @Input()\r\n  title: string;\r\n\r\n  @Input()\r\n  width: number = undefined;\r\n\r\n  @Input()\r\n  height: number = undefined;\r\n\r\n  @Input()\r\n  options: any = {};\r\n\r\n  @Input()\r\n  type: string;\r\n\r\n  constructor(element: ElementRef, loaderService: ScriptLoaderService) {\r\n    super(element, loaderService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.type == null) {\r\n      throw new Error('Can\\'t create a Google Chart without specifying a type!');\r\n    }\r\n    if (this.data == null) {\r\n      throw new Error('Can\\'t create a Google Chart without data!');\r\n    }\r\n\r\n    this.chartData = {\r\n      chartType: this.type\r\n    };\r\n\r\n    this.loaderService.onReady.subscribe(() => {\r\n      this.createChart();\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.wrapper) {\r\n      this.chartData = {\r\n        chartType: this.type,\r\n        dataTable: this.getDataTable(),\r\n        options: this.parseOptions()\r\n      };\r\n    }\r\n\r\n    super.ngOnChanges();\r\n  }\r\n\r\n  protected parseOptions(): any {\r\n    return {\r\n      title: this.title,\r\n      width: this.width,\r\n      height: this.height,\r\n      ...this.options\r\n    };\r\n  }\r\n\r\n  protected createChart() {\r\n    this.loadNeededPackages().subscribe(() => {\r\n      this.chartData = {\r\n        chartType: this.type,\r\n        dataTable: this.getDataTable(),\r\n        options: this.parseOptions()\r\n      };\r\n\r\n      this.wrapper = new google.visualization.ChartWrapper();\r\n      this.updateChart();\r\n    });\r\n  }\r\n\r\n  protected getDataTable(): Array<any> {\r\n    if (this.columnNames) {\r\n      const columns = this.parseRoles(this.columnNames);\r\n      this.firstRowIsData = false;\r\n      return [columns, ...this.data];\r\n    } else {\r\n      this.firstRowIsData = true;\r\n      return this.data;\r\n    }\r\n  }\r\n\r\n  private parseRoles(columnNames: any[]): any[] {\r\n    const columnNamesWithRoles = columnNames.slice();\r\n    if (this.roles) {\r\n      // Roles must be copied to avoid modifying the index everytime there's a change from ngOnChanges.\r\n      const copyRoles = this.roles.map(role => Object.assign({}, role));\r\n      copyRoles.forEach(role => {\r\n        const roleData: Role = {\r\n          type: role.type,\r\n          role: role.role\r\n        };\r\n        if (role.p) {\r\n          roleData.p = role.p;\r\n        }\r\n        if (role.index != null) {\r\n          columnNamesWithRoles.splice(role.index + 1, 0, roleData);\r\n\r\n          for (const otherRole of copyRoles) {\r\n            if (otherRole === role) {\r\n              continue;\r\n            }\r\n\r\n            if (otherRole.index > role.index) {\r\n              otherRole.index++;\r\n            }\r\n          }\r\n        } else {\r\n          columnNamesWithRoles.push(roleData);\r\n        }\r\n      });\r\n    }\r\n\r\n    return columnNamesWithRoles;\r\n  }\r\n}\r\n","import { NgModule, Provider, LOCALE_ID, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { ScriptLoaderService } from './script-loader/script-loader.service';\r\nimport { RawChartComponent } from './raw-chart/raw-chart.component';\r\nimport { GoogleChartComponent } from './google-chart/google-chart.component';\r\nimport { GOOGLE_API_KEY, CHART_VERSION } from './models/injection-tokens.model';\r\n\r\nexport const GOOGLE_CHARTS_PROVIDERS: Provider[] = [\r\n  {\r\n    provide: ScriptLoaderService,\r\n    useFactory: setupScriptLoaderService,\r\n    deps: [LOCALE_ID, GOOGLE_API_KEY, CHART_VERSION]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  providers: [ScriptLoaderService],\r\n  declarations: [GoogleChartComponent, RawChartComponent],\r\n  exports: [GoogleChartComponent, RawChartComponent]\r\n})\r\nexport class GoogleChartsModule {\r\n  public static forRoot(googleApiKey?: string, chartVersion?: string): ModuleWithProviders {\r\n    return {\r\n      ngModule: GoogleChartsModule,\r\n      providers: [\r\n        GOOGLE_CHARTS_PROVIDERS,\r\n        { provide: GOOGLE_API_KEY, useValue: googleApiKey ? googleApiKey : '' },\r\n        { provide: CHART_VERSION, useValue: chartVersion ? chartVersion : '46' }\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\nexport function setupScriptLoaderService(localeId: string, googleApiKey: string, chartVersion: string): ScriptLoaderService {\r\n  return new ScriptLoaderService(localeId, googleApiKey, chartVersion);\r\n}\r\n"]}